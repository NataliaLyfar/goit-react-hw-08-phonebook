{"version":3,"file":"static/js/927.99df3e6c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactsList/Contact.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/index.jsx","schema/yupPhoneValidation.js","schema/yupPasswordValidation.js","schema/yupEmailValidation.js"],"sourcesContent":["import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { yupPhoneValidation } from 'schema';\nimport { FaUserPlus, FaPhoneAlt } from \"react-icons/fa\";\nimport { Label,\n         TertiaryButton,\n         PrimaryButton, \n         FormError, \n         StyledForm, \n         FormInput } from \"components/ui\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\n\n\nexport const ContactForm = ({handleSubmit, initialValues, isLoading, update=false}) => {\n  const schema = yup.object({\n    ...yupPhoneValidation,\n    name: yup.string().required(),\n  });\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}>\n        {({values, handleChange, handleBlur}) => (\n        <StyledForm>\n            <Label htmlFor='name'><FaUserPlus/>Name</Label>\n            <FormInput type='text' name='name'/>\n            <FormError name=\"name\"/>\n            <Label htmlFor='number'><FaPhoneAlt/>Number</Label>\n            <PhoneInput\n                  inputProps={{\n                    name: 'number',\n                  }}\n                  country={'ua'}\n                  placeholder=''\n                  onChange={(phoneNumber, country, e) => {\n                    handleChange(e);\n                  }}\n                  onBlur={handleBlur}\n                  value={values.number}\n                />\n            <FormError name=\"number\"/>\n            {update ? (\n              <PrimaryButton type='submit'\n                disabled={isLoading}\n                aria-label=\"update contact button\">\n                Update contact\n              </PrimaryButton>\n            ) : (\n              <TertiaryButton disabled={isLoading} type='submit'>\n                Add contact\n              </TertiaryButton>\n            )\n          }\n        </StyledForm>\n        )}\n    </Formik>\n  );\n};\n\n\n\n","import {Link, useLocation} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nimport { useDeleteContactMutation } from \"redux/phonebookApiQuery\";\nimport { IconButton } from 'components/ui';\nimport {FaUserMinus} from \"react-icons/fa\";\nimport {GrDocumentUpdate} from \"react-icons/gr\";\n\n\nexport const Contact = ({ id, name, number }) => {\n  const location = useLocation();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  \n  const getInitials = () => name.slice(0,1).toUpperCase();\n\n  return (\n    <ListItem key={id} id={id}>\n      <GapBox>\n        <Initials>{getInitials()}</Initials>\n          {name}: {number}\n       </GapBox>\n       <GapBox>\n         <StyledLink to={`/update/${id}`} state={{ from: location }}>\n            <IconButton\n              type=\"button\"\n              aria-label=\"link to update contact page\">\n              <GrDocumentUpdate/>\n            </IconButton>\n        </StyledLink>\n        <IconButton \n          onClick={() => deleteContact(id)}\n          disabled={isDeleting}>\n          <FaUserMinus/>\n        </IconButton>\n      </GapBox>\n    </ListItem> \n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nconst ListItem = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nmargin-bottom: ${p => p.theme.space[1]}px;\nbox-shadow: 0px 5px 5px -5px ${p => p.theme.colors.tertiary};\nbackground-color: ${p => p.theme.colors.white};\n`;\nconst Initials = styled.span`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 30px;\nheight: 30px;\nborder-radius: ${p => p.theme.radii.round};\ncolor: ${p => p.theme.colors.white};\nbackground-color: ${p => p.theme.colors.primary};\nbox-shadow: \n    -10px -10px 15px rgba(255, 255, 255, 0.6),\n    10px 10px 15px rgba(70, 70, 70, 0.18);\n`;\nconst GapBox = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\ngap: ${p => p.theme.space[1]}px;\n`;\nconst StyledLink = styled(Link)`\ndisplay:block;\nmargin-left: auto;\n`;\n","import { useSelector } from \"react-redux\";\nimport { useMemo } from \"react\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport styled from \"styled-components\";\nimport { useGetContactsQuery } from \"redux/phonebookApiQuery\";\nimport { getFilter } from \"redux/contacts\";\nimport { SpinnerDotted } from 'spinners-react';\nimport { Contact } from \"./Contact\";\nimport { List } from \"components/ui\";\n\n\nexport const ContactsList = () => {\n  const contact = useSelector(getFilter);\n\n  const checkedContacts = useMemo(() => {\n    return createSelector(\n      [res => res.data, (_, contact) => contact],\n      (contacts, contact) => \n        contacts?.filter(({name}) => {\n          return name.toLowerCase().includes(contact.toLowerCase());\n          }).sort((a, b) => a.name.localeCompare(b.name)) ?? [],\n    );\n  },[]);\n\n  const { filteredContacts, isFetching} = useGetContactsQuery(undefined, {\n    selectFromResult(result) {\n      return {\n        ...result,\n        filteredContacts: checkedContacts(result, contact)\n      };\n    },\n  });\n\n  return (\n    <>\n      {isFetching && <StyledSpinner speed={20} size={100} color={'#0e6769'}/>}\n      <List>\n        {filteredContacts.map(contact => (\n          <Contact key={contact.id} {...contact}/>)\n        )}\n      </List>\n    </>\n  );\n};\n\nconst StyledSpinner = styled(SpinnerDotted)`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n`;\n\n\n","import {FaSearch} from \"react-icons/fa\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contactsSlice';\nimport { Label, Input, Box } from \"components/ui\";\nimport { getFilter } from \"redux/contacts\";\n\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  \n  return (\n    <Box>\n      <Label htmlFor=\"filter\"><FaSearch/>Find contacts by name</Label>\n        <Input type='text' name='filter' \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={filter}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />      \n    </Box>\n  );\n};\n\n","import styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport { Section } from 'components/ui';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactsList } from 'components/ContactsList';\nimport { Filter } from 'components/Filter';\nimport { breakpoints } from \"styleConfig/breakpoints\";\nimport { \n  useCreateContactMutation,\n  useGetContactsQuery,\n } from \"redux/phonebookApiQuery\";\nimport BackPic from 'assets/contactBack.jpg'\n\n\nconst ContactsPage  = () => {\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n \n  const initialValues = {\n    name: '',\n    number: ''\n  };\n  \n  const handleSubmit = (values, {resetForm}) => {\n    const isContactExist = contacts?.find(({name}) => name.toLowerCase() === values.name.toLowerCase());\n    if(isContactExist){\n      return toast.info(`${values.name} is already in contacts`);\n    };\n    createContact(values);\n    resetForm();\n  };\n  \n  return (\n    <ContactsWrapper>\n      <Section>\n        <ContactForm \n          handleSubmit={handleSubmit}\n          initialValues={initialValues}\n          isLoading={isLoading}\n        />\n      </Section>\n      <Section>\n        <Filter />\n        <ContactsList />\n      </Section>\n    </ContactsWrapper>\n  );\n};\n\nconst ContactsWrapper = styled.div`\nwidth: 100%;\nheight: 100%;\noverflow: auto;\ncolor: ${p => p.theme.colors.primary}; \npadding: 0 ${p => p.theme.space[2]}px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n  @media (${breakpoints.tablet}) {\n    padding: 0 ${p => p.theme.space[3]}px;\n  };\n  @media (${breakpoints.laptop}) {\n    padding: 0 ${p => p.theme.space[4]}px;\n    align-items: flex-start;\n    flex-direction: row;\n    justify-content: space-around;\n  };\nmargin: 0 auto;\nbackground-color: white;\nbackground-image: url(${BackPic});\nbackground-position: center;\nbackground-repeat: no-repeat;\nbackground-size: contain;\n`;\n\nexport default ContactsPage;","import * as yup from 'yup';\n\nexport const yupPhoneValidation = ({\n  number: yup.string().required().min(5).max(30),\n});\n\n","import * as yup from 'yup';\n\nexport const yupPasswordValidation = ({\n  password: yup\n    .string()\n    .required('Please, enter your password')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,24}$/,\n      \"Must contain 8 or more characters: uppercase, lowercase letters, a number and a special case character\"\n  ),\n});\n\n","import * as yup from 'yup';\n\nexport const yupEmailValidation = ({\n    email: yup.string().email('Invalid email address format').required('Please, enter your email')\n});"],"names":["ContactForm","handleSubmit","initialValues","isLoading","update","schema","yup","yupPhoneValidation","name","required","validationSchema","onSubmit","values","handleChange","handleBlur","htmlFor","type","inputProps","country","placeholder","onChange","phoneNumber","e","onBlur","value","number","disabled","Contact","id","location","useLocation","useDeleteContactMutation","deleteContact","isDeleting","ListItem","GapBox","Initials","slice","toUpperCase","StyledLink","to","state","from","onClick","styled","p","theme","space","colors","tertiary","white","radii","round","primary","Link","ContactsList","contact","useSelector","getFilter","checkedContacts","useMemo","createSelector","res","data","_","contacts","filter","toLowerCase","includes","sort","a","b","localeCompare","useGetContactsQuery","undefined","selectFromResult","result","filteredContacts","isFetching","StyledSpinner","speed","size","color","map","SpinnerDotted","Filter","dispatch","useDispatch","pattern","changeFilter","target","ContactsWrapper","breakpoints","BackPic","useCreateContactMutation","createContact","resetForm","find","toast","min","max","yupPasswordValidation","password","matches","yupEmailValidation","email"],"sourceRoot":""}