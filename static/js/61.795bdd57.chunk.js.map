{"version":3,"file":"static/js/61.795bdd57.chunk.js","mappings":"4RAkBaA,EAAa,WACxB,OAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAQXC,EAASC,EAAAA,IAAA,kBACVC,EAAAA,IADU,IAEbC,KAAMF,EAAAA,KAAaG,SAAS,2BAC5BC,MAAOJ,EAAAA,KAAaI,QAAQD,SAAS,+BAWvC,OACE,SAAC,KAAD,CACEE,cAtBkB,CACpBH,KAAM,GACNE,MAAO,GACPE,SAAU,IAoBRC,iBAAkBR,EAClBS,SAZiB,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAC7Bb,EAASc,EAAAA,EAAAA,SAAwBF,IACjCC,GACD,EAMC,UAII,UAAC,KAAD,YACI,UAAC,KAAD,CAAOE,QAAQ,OAAf,WAAsB,SAAC,MAAD,IAAtB,WACA,SAAC,KAAD,CAAWC,KAAK,OAAOX,KAAK,UAC5B,SAAC,KAAD,CAAWA,KAAK,UAChB,UAAC,KAAD,CAAOU,QAAQ,QAAf,WAAuB,SAAC,MAAD,IAAvB,YACA,SAAC,KAAD,CAAWC,KAAK,QAAQX,KAAK,WAC7B,SAAC,KAAD,CAAWA,KAAK,WAChB,SAAC,KAAD,CAAOU,QAAQ,WAAf,uBACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAWC,KAAMlB,EAAgB,OAAS,WAAYO,KAAK,cACzD,SAACY,EAAA,EAAD,CACAC,UAAU,MACVC,SAAS,SAACC,EAAA,EAAD,CAASC,GAAG,0BAAZ,2BAFT,UAGE,SAAC,KAAD,CACEC,QAvBK,WACrBvB,GAAkBD,EACnB,EAsBiBkB,KAAK,SAFP,UAGE,SAAC,MAAD,CAAUO,KAAM,aAIxB,SAAC,KAAD,CAAWlB,KAAK,cAChB,SAAC,KAAD,CAAeW,KAAK,SAApB,yBAMX,EC3DD,EAXmB,WACjB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,yCACA,SAACpB,EAAD,QAIP,C,sHCXY4B,EAAsB,CACjCC,OAAQtB,EAAAA,KAAaG,WAAWoB,KAAK,CACjCA,KAAM,SAACC,GAAD,MAAY,0BAA2BD,KAAKC,EAA5C,KCFCvB,EAAyB,CACpCK,SAAUN,EAAAA,KAEPG,SAAS,+BACTsB,QACC,mEACA,4GAIOC,EAA8B,CACzCpB,SAAUN,EAAAA,KAEPG,SAAS,+BACTsB,QACC,mEAJM,wK","sources":["components/AuthForms/SignUpForm.jsx","pages/SignUpPage/index.jsx","schema/yupPhoneValidation.js","schema/yupPasswordValidation.js"],"sourcesContent":["import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { yupPasswordValidation } from 'schema';\nimport { useDispatch } from 'react-redux';\nimport authOperations  from 'redux/auth/authOperations';\nimport { FaUserPlus, FaRegEye } from \"react-icons/fa\";\nimport { Label, \n         PrimaryButton, \n         ShowPasswordButton, \n         FormError, \n         FormContact, \n         FormInput, \n         InputWrapper} from \"components/ui\";\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\n\n\nexport const SignUpForm = () => {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n      \n  const schema = yup.object({\n    ...yupPasswordValidation,\n    name: yup.string().required('Please, enter your name'),\n    email: yup.string().email().required('Please, enter your email'),\n  });\n    \n  const handleSubmit = (values, {resetForm}) => {\n    dispatch(authOperations.register(values));\n    resetForm();\n  };\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}>  \n        <FormContact>\n            <Label htmlFor='name'><FaUserPlus/>Name</Label>\n            <FormInput type='name' name='name'/>\n            <FormError name=\"name\"/>\n            <Label htmlFor='email'><FaUserPlus/>Email</Label>\n            <FormInput type='email' name='email'/>\n            <FormError name=\"email\"/>\n            <Label htmlFor='password'>Password</Label>\n            <InputWrapper>\n              <FormInput type={passwordShown ? 'text' : 'password'} name=\"password\"/>\n                <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip id=\"password button tooltip\">show password</Tooltip>}>\n                  <ShowPasswordButton\n                    onClick={togglePassword}\n                    type=\"button\">\n                    <FaRegEye size={30} />\n                  </ShowPasswordButton>\n                </OverlayTrigger>\n            </InputWrapper>\n            <FormError name=\"password\"/>\n            <PrimaryButton type='submit'>\n              Sign Up\n            </PrimaryButton>\n        </FormContact>\n    </Formik>\n  );\n};\n\n\n","import { SignUpForm } from \"components/AuthForms\";\nimport { FormPageContainer, FormWrapper, Title } from \"components/ui\";\n\n\nconst SignUpPage = () => {\n  return (\n    <FormPageContainer>\n      <FormWrapper>\n        <Title>Create your free account!</Title>\n        <SignUpForm/>\n      </FormWrapper>\n    </FormPageContainer> \n  );\n};\n\nexport default SignUpPage;","import * as yup from 'yup';\n\nexport const yupPhoneValidation = ({\n  number: yup.string().required().test({\n      test: (value) => (/^[\\d+][\\d()-]{8,16}\\d$/i).test(value),\n  }),\n});\n\n","import * as yup from 'yup';\n\nexport const yupPasswordValidation = ({\n  password: yup\n    .string()\n    .required('Please, enter your password')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,24}$/,\n      \"Must contain 8 and more characters: uppercase, lowercase letters, a number and a special case character\"\n  ),\n});\n\nexport const yupLoginPasswordValidation = ({\n  password: yup\n    .string()\n    .required('Please, enter your password')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,24}$/,\n      `The password must match the registration's password.\n       Must contain 8 and more characters: uppercase, lowercase letters, a number and a special case character`\n  ),\n});\n"],"names":["SignUpForm","useState","passwordShown","setPasswordShown","dispatch","useDispatch","schema","yup","yupPasswordValidation","name","required","email","initialValues","password","validationSchema","onSubmit","values","resetForm","authOperations","htmlFor","type","OverlayTrigger","placement","overlay","Tooltip","id","onClick","size","yupPhoneValidation","number","test","value","matches","yupLoginPasswordValidation"],"sourceRoot":""}