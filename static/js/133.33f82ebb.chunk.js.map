{"version":3,"file":"static/js/133.33f82ebb.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.jsx","helpers/errorCatcher.js","pages/SignUpPage/index.jsx","schema/yupPhoneValidation.js","schema/yupPasswordValidation.js","schema/yupEmailValidation.js"],"sourcesContent":["import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { yupEmailValidation, yupPasswordValidation } from 'schema';\nimport { FaUserPlus, FaRegEye } from \"react-icons/fa\";\nimport { MdAttachEmail } from \"react-icons/md\";\nimport { Label, \n         PrimaryButton, \n         ShowPasswordButton, \n         FormError, \n         StyledForm, \n         FormInput, \n         InputWrapper} from \"components/ui\";\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\n\nexport const AuthForm = ({onSubmit, type, register = false}) => {\n  const [passwordShown, setPasswordShown] = useState(false);\n  \n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n      \n  const schema = register ? \n  yup.object({\n    ...yupPasswordValidation,\n    ...yupEmailValidation,\n    name: yup.string().required('Please, enter your name'),\n  }) : \n  yup.object({\n    ...yupPasswordValidation,\n    ...yupEmailValidation,\n  });\n    \n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={onSubmit}>\n        <StyledForm noValidate>\n          {register && (\n            <>\n              <Label htmlFor='name'><FaUserPlus/>Name</Label>\n              <FormInput type='name' name='name'/>\n              <FormError name=\"name\"/>\n            </>\n          )}\n            <Label htmlFor='email'><MdAttachEmail/>Email</Label>\n            <FormInput type='email' name='email'/>\n            <FormError name=\"email\"/>\n            <Label htmlFor='password'>Password</Label>\n            <InputWrapper>\n              <FormInput type={passwordShown ? 'text' : 'password'} name=\"password\"/>\n                <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip id=\"password button tooltip\">show password</Tooltip>}>\n                  <ShowPasswordButton\n                    onClick={togglePassword}\n                    type=\"button\">\n                    <FaRegEye size={30} />\n                  </ShowPasswordButton>\n                </OverlayTrigger>\n            </InputWrapper>\n            <FormError name=\"password\"/>\n            <PrimaryButton type='submit'>\n              {type}\n            </PrimaryButton>  \n        </StyledForm>\n    </Formik>\n  );\n};\n\n\n","import { toast } from \"react-toastify\";\n\nexport const errorCatcher = (register=true, error) => {\n    if (error?.status === 400) {\n        if(error?.data?.name === \"MongoError\") toast.error(`User already exists! Try again!`);\n        if(error?.data?.message) toast.error(`${error?.data?.message}`);\n        if(!register)toast.error(`Incorrect email or password. Try again!`);\n      };\n      if (error?.status === 404) toast.error(`Ð¡onnection error 404! Try later!`);\n      if (error?.status === 500) toast.error(`Server error! Try again!`);\n};","\nimport { useDispatch } from \"react-redux\";\nimport {setCredentials} from \"redux/auth/authSlice\";\nimport { useRegisterUserMutation } from \"redux/phonebookApiQuery\";\nimport { AuthForm } from \"components/AuthForm\";\nimport { FormPageContainer, FormWrapper, Title } from \"components/ui\";\nimport { errorCatcher } from \"helpers\";\n\n\nconst SignUpPage = () => { \nconst [ registerUser] = useRegisterUserMutation();\nconst dispatch = useDispatch();\n\n\nconst handleSubmit = async (values, { resetForm }) => {\n  try{\n    const response = await registerUser(values).unwrap();\n    dispatch(setCredentials(response));\n  } catch (error){\n    errorCatcher(true, error);\n  };\n  resetForm();\n};\n\nreturn (\n  <FormPageContainer>\n    <FormWrapper>\n      <Title>Create your free account!</Title>\n      <AuthForm onSubmit={handleSubmit}  register={true} type={'Sign Up'} />\n    </FormWrapper>\n  </FormPageContainer> \n  );\n};\n\nexport default SignUpPage;","import * as yup from 'yup';\n\nexport const yupPhoneValidation = ({\n  number: yup.string().required().min(5).max(30),\n});\n\n","import * as yup from 'yup';\n\nexport const yupPasswordValidation = ({\n  password: yup\n    .string()\n    .required('Please, enter your password')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,24}$/,\n      \"Must contain 8 or more characters: uppercase, lowercase letters, a number and a special case character\"\n  ),\n});\n\n","import * as yup from 'yup';\n\nexport const yupEmailValidation = ({\n    email: yup.string().email('Invalid email address format').required('Please, enter your email')\n});"],"names":["AuthForm","onSubmit","type","register","useState","passwordShown","setPasswordShown","schema","yup","yupPasswordValidation","yupEmailValidation","name","required","initialValues","email","password","validationSchema","noValidate","htmlFor","OverlayTrigger","placement","overlay","Tooltip","id","onClick","size","errorCatcher","error","status","data","toast","message","useRegisterUserMutation","registerUser","dispatch","useDispatch","handleSubmit","values","resetForm","unwrap","response","setCredentials","yupPhoneValidation","number","min","max","matches"],"sourceRoot":""}