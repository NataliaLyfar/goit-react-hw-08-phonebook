{"version":3,"file":"static/js/927.e0384c08.chunk.js","mappings":"sSAKaA,EAAkB,SAACC,GAC9B,MAKIA,EAJFC,MAASC,EADX,EACWA,KAAMC,EADjB,EACiBA,MACPC,EAGNJ,EAHFK,KAAQD,cACRE,EAEEN,EAFFM,QACAC,EACEP,EADFO,SAUF,OACI,SAAC,IAAD,CACEC,YAAY,qBACZN,KAAMA,EACNC,MAAOA,EACPI,SAZgB,SAACE,GACrBL,EAAcF,EAAMO,GACH,OAAbF,GACFA,EAASE,EAEZ,EAQKH,QAASA,EACTI,GAAG,cAGR,EASDX,EAAgBY,aAAe,CAC7BC,UAAW,GACXF,GAAI,aACJG,MAAO,GACPN,SAAU,KACVD,QAAS,KACTQ,UAAU,GC5BP,IAAMC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,MAAjBC,GAAP,eACcC,GAAaC,EAAAA,EAAAA,MAAnBC,KAOFC,EAASC,EAAAA,IAAA,kBACVC,EAAAA,IADU,IAEbrB,KAAMoB,EAAAA,KAAaE,cAYrB,OACE,SAAC,KAAD,CACEC,cArBkB,CACpBvB,KAAM,GACNwB,OAAQ,IAoBNC,iBAAkBN,EAClBO,SAbiB,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAE7B,GADoB,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAAUa,MAAK,qBAAE7B,KAAe8B,gBAAkBH,EAAO3B,KAAK8B,aAA/C,IAEpC,OAAOC,EAAAA,GAAAA,KAAA,UAAcJ,EAAO3B,KAArB,4BAETe,EAAcY,GACdC,GACD,EAGC,UAII,UAAC,KAAD,YACI,UAAC,KAAD,CAAOI,QAAQ,OAAf,WAAsB,SAAC,MAAD,IAAtB,WACA,SAAC,KAAD,CAAWC,KAAK,OAAOjC,KAAK,UAC5B,SAAC,KAAD,CAAWA,KAAK,UAChB,UAAC,KAAD,CAAOgC,QAAQ,SAAf,WAAwB,SAAC,MAAD,IAAxB,aACA,SAAC,KAAD,CACAC,KAAK,MAAMjC,KAAK,SAASI,QAAS,KAAM8B,QAAS,SACjDC,UAAWtC,KAEX,SAAC,KAAD,CAAWG,KAAK,YAChB,SAAC,KAAD,CAAgBiC,KAAK,SAArB,6BAMX,E,oBC1CYG,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACThC,GAAOiC,EAAAA,EAAAA,MAAPjC,GACR,GAAsBkC,EAAAA,EAAAA,UAASH,EAASI,MAAMC,MAA9C,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,UACVjC,GAAaC,EAAAA,EAAAA,MAAnBC,KAOFC,EAASC,EAAAA,IAAA,kBACVC,EAAAA,IADU,IAEbrB,KAAMoB,EAAAA,KAAaE,cAcrB,OACE,SAAC,KAAD,CACEC,cAvBkB,CACpBvB,KAAM,GACNwB,OAAQ,IAsBNC,iBAAkBN,EAClBO,SAfiB,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAE7B,GADoB,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAAUa,MAAK,qBAAE7B,KAAe8B,gBAAkBH,EAAO3B,KAAK8B,aAA/C,IAEpC,OAAOC,EAAAA,GAAAA,KAAA,UAAcJ,EAAO3B,KAArB,4BAETgD,GAAc,QAACxC,GAAAA,GAAOmB,IACtBmB,EAAO,MACPT,EAASQ,GACTjB,GACD,EAGC,UAII,UAAC,KAAD,YACI,UAAC,KAAD,CAAOI,QAAQ,OAAf,WAAsB,SAAC,MAAD,IAAtB,WACA,SAAC,KAAD,CAAWC,KAAK,OAAOjC,KAAK,UAC5B,SAAC,KAAD,CAAWA,KAAK,UAChB,UAAC,KAAD,CAAOgC,QAAQ,SAAf,WAAwB,SAAC,MAAD,IAAxB,aACA,SAAC,KAAD,CACAC,KAAK,MAAMjC,KAAK,SAASI,QAAS,KAAM8B,QAAS,SACjDC,UAAWtC,KAEX,SAAC,KAAD,CAAWG,KAAK,YAChB,SAAC,KAAD,CAAeiC,KAAK,SACnBrB,SAAUqC,EACV,aAAW,wBAFZ,gCAQX,C,2PC9DYC,EAAU,SAAC,GAA0B,IAAxB1C,EAAuB,EAAvBA,GAAIR,EAAmB,EAAnBA,KAAMwB,EAAa,EAAbA,OAC5Be,GAAWC,EAAAA,EAAAA,MACjB,GAAmDW,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBJ,UAIxB,OACE,UAACK,EAAD,CAAmB9C,GAAIA,EAAvB,WACE,UAAC+C,EAAD,YACE,SAACC,EAAD,UALoBxD,EAAKyD,MAAM,EAAE,GAAGC,gBAMjC1D,EAFL,KAEawB,MAEZ,UAAC+B,EAAD,YACE,SAACI,EAAD,CAAYC,GAAE,kBAAapD,GAAMmC,MAAO,CAAEC,KAAML,GAAhD,UACG,SAAC,KAAD,CACEN,KAAK,SACL,aAAW,8BAFb,UAGE,SAAC,MAAD,SAGN,SAAC,KAAD,CACE4B,QAAS,kBAAMT,EAAc5C,EAApB,EACTI,SAAUyC,EAFZ,UAGE,SAAC,MAAD,WAhBS7C,EAqBlB,EAQK8C,EAAWQ,EAAAA,GAAAA,GAAH,iLAIG,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACa,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,QAAnB,IACZ,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,KAAnB,IAEfZ,EAAWM,EAAAA,GAAAA,KAAH,yRAMG,SAAAC,GAAC,OAAIA,EAAEC,MAAMK,MAAMC,KAAlB,IACT,SAAAP,GAAC,OAAIA,EAAEC,MAAME,OAAOE,KAAnB,IACU,SAAAL,GAAC,OAAIA,EAAEC,MAAME,OAAOK,OAAnB,IAKfhB,EAASO,EAAAA,GAAAA,IAAH,4GAIL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEFN,GAAaG,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,4DC7DHW,EAAe,WAC1B,IAAMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAEtBC,GAAkBC,EAAAA,EAAAA,UAAQ,WAC9B,OAAOC,EAAAA,EAAAA,IACL,CAAC,SAAAC,GAAG,OAAIA,EAAI9D,IAAR,EAAc,SAAC+D,EAAGP,GAAJ,OAAgBA,CAAhB,IAClB,SAAC1D,EAAU0D,GAAX,8BACE1D,QADF,IACEA,OADF,EACEA,EAAUkE,QAAO,YACf,OAD2B,EAAVlF,KACL8B,cAAcqD,SAAST,EAAQ5C,cAC1C,IAAEsD,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErF,KAAKuF,cAAcD,EAAEtF,KAAjC,WAHZ,QAGuD,EAHvD,GAKH,GAAC,IAEF,GAAwCiB,EAAAA,EAAAA,SAAoBuE,EAAW,CACrEC,iBADqE,SACpDC,GACf,OAAO,kBACFA,GADL,IAEEC,iBAAkBd,EAAgBa,EAAQhB,IAE7C,IANKiB,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,WAS1B,OACE,gCACGA,IAAc,SAACC,EAAD,CAAeC,MAAO,GAAIC,KAAM,IAAKC,MAAO,aAC3D,SAAC,KAAD,UACGL,EAAiBM,KAAI,SAAAvB,GAAO,OAC3B,SAACxB,GAAD,UAA8BwB,GAAhBA,EAAQlE,GADK,QAMpC,EAEKqF,GAAgB/B,EAAAA,EAAAA,IAAOoC,EAAAA,EAAPpC,CAAH,uG,UCtCNqC,EAAS,WACpB,IAAMjB,GAASP,EAAAA,EAAAA,IAAYC,EAAAA,IACrBwB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,KAAD,YACE,UAAC,KAAD,CAAOrE,QAAQ,SAAf,WAAwB,SAAC,MAAD,IAAxB,4BACE,SAAC,KAAD,CAAOC,KAAK,OAAOjC,KAAK,SACtBsG,QAAQ,yHACRrG,MAAOiF,EACP7E,SAAU,SAAAkG,GAAC,OAAIH,GAASI,EAAAA,EAAAA,GAAaD,EAAEE,OAAOxG,OAAnC,MAIpB,E,oBCEKyG,EAAkB5C,EAAAA,GAAAA,IAAH,ggBAIZ,SAAAC,GAAC,OAAIA,EAAEC,MAAME,OAAOK,OAAnB,IACG,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,GAIF0C,EAAAA,EAAAA,QACK,SAAA5C,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,GAEN0C,EAAAA,EAAAA,QACK,SAAA5C,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,GAOM2C,GAMxB,EAxCsB,WACpB,OACE,UAACF,EAAD,YACE,SAAC,KAAD,WACE,SAAC7F,EAAA,EAAD,OAEF,UAAC,KAAD,YACE,SAACsF,EAAD,KACA,SAAC1B,EAAD,SAIP,C,sHCnBYpD,EAAsB,CACjCG,OAAQJ,EAAAA,KAAaE,WAAWuF,KAAK,CACjCA,KAAM,SAAC5G,GAAD,MAAY,0BAA2B4G,KAAK5G,EAA5C,KCFC6G,EAAyB,CACpCC,SAAU3F,EAAAA,KAEPE,SAAS,+BACT0F,QACC,mEACA,2GCNOC,EAAsB,CAC/BC,MAAO9F,EAAAA,KAAa8F,MAAM,gCAAgC5F,SAAS,4B","sources":["components/ContactForm/PhoneInputField/PhoneInputField.jsx","components/ContactForm/ContactForm.jsx","components/ContactForm/UpdateForm.jsx","components/ContactsList/Contact.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/index.jsx","schema/yupPhoneValidation.js","schema/yupPasswordValidation.js","schema/yupEmailValidation.js"],"sourcesContent":["import PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport PropTypes from 'prop-types';\n\n\nexport const PhoneInputField = (props) => {\n  const {\n    field: { name, value },\n    form: { setFieldValue} ,\n    country,\n    onChange,\n  } = props;\n  \n  const onValueChange = (phoneNumber) => {\n    setFieldValue(name, phoneNumber);\n    if (onChange !== null) {\n      onChange(phoneNumber);\n    }\n  };\n\n  return (\n      <PhoneInput\n        placeholder=\"Enter phone number\"\n        name={name}\n        value={value}\n        onChange={onValueChange}\n        country={country}\n        id=\"phoneInput\"\n      />\n    );\n  };\n  \n  PhoneInputField.propTypes = {\n    form: PropTypes.any.isRequired,\n    field: PropTypes.any.isRequired,\n    onChange: PropTypes.func,\n    country: PropTypes.string,\n  };\n  \n  PhoneInputField.defaultProps = {\n    className: '',\n    id: \"phoneInput\",\n    label: '',\n    onChange: null,\n    country: 'AU',\n    disabled: false,\n  };","import { Field, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { yupPhoneValidation } from 'schema';\nimport { toast } from 'react-toastify';\nimport { FaUserPlus, FaPhoneAlt } from \"react-icons/fa\";\nimport { Label,\n         TertiaryButton, \n         FormError, \n         StyledForm, \n         FormInput } from \"components/ui\";\nimport { \n  useCreateContactMutation,\n  useGetContactsQuery,\n } from \"redux/phonebookApiQuery\";\nimport { PhoneInputField } from './PhoneInputField';\n\n\nexport const ContactForm = () => {\n  const [createContact] = useCreateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n \n  const initialValues = {\n    name: '',\n    number: ''\n  };\n  \n  const schema = yup.object({\n    ...yupPhoneValidation,\n    name: yup.string().required(),\n  });\n\n  const handleSubmit = (values, {resetForm}) => {\n    const isContactExist = contacts?.find(({name}) => name.toLowerCase() === values.name.toLowerCase());\n    if(isContactExist){\n      return toast.info(`${values.name} is already in contacts`);\n    };\n    createContact(values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}>\n        <StyledForm>\n            <Label htmlFor='name'><FaUserPlus/>Name</Label>\n            <FormInput type='text' name='name'/>\n            <FormError name=\"name\"/>\n            <Label htmlFor='number'><FaPhoneAlt/>Number</Label>\n            <Field\n            type=\"tel\" name=\"number\" country={'ua'} regions={'europe'}\n            component={PhoneInputField}\n            />\n            <FormError name=\"number\"/>\n            <TertiaryButton type='submit'>\n              Add contact\n            </TertiaryButton>\n        </StyledForm>\n    </Formik>\n  );\n};\n\n\n\n","import { useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Field, Formik } from 'formik';\nimport * as yup from 'yup';\nimport { yupPhoneValidation } from 'schema';\nimport { toast } from 'react-toastify';\nimport { FaUserPlus, FaPhoneAlt } from \"react-icons/fa\";\nimport { Label, \n         PrimaryButton, \n         FormError, \n         StyledForm, \n         FormInput } from \"components/ui\";\nimport { \n  useUpdateContactMutation,\n  useGetContactsQuery,\n } from \"redux/phonebookApiQuery\";\nimport { PhoneInputField } from './PhoneInputField';\n\n\nexport const UpdateForm = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { id } = useParams();\n  const [url, setUrl] = useState(location.state.from);\n  const [updateContact, { isLoading }] = useUpdateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const initialValues = {\n    name: '',\n    number: ''\n  };\n  \n  const schema = yup.object({\n    ...yupPhoneValidation,\n    name: yup.string().required(),\n  });\n\n  const handleSubmit = (values, {resetForm}) => {\n    const isContactExist = contacts?.find(({name}) => name.toLowerCase() === values.name.toLowerCase());\n    if(isContactExist){\n      return toast.info(`${values.name} is already in contacts`);\n    };\n    updateContact({id, ...values});\n    setUrl(null);\n    navigate(url);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}>  \n        <StyledForm>\n            <Label htmlFor='name'><FaUserPlus/>Name</Label>\n            <FormInput type='text' name='name'/>\n            <FormError name=\"name\"/>\n            <Label htmlFor='number'><FaPhoneAlt/>Number</Label>\n            <Field\n            type=\"tel\" name=\"number\" country={'ua'} regions={'europe'}\n            component={PhoneInputField}\n            />\n            <FormError name=\"number\"/>\n            <PrimaryButton type='submit'\n             disabled={isLoading}\n             aria-label=\"update contact button\">\n              Update contact\n            </PrimaryButton>\n        </StyledForm>\n    </Formik>\n  );\n};\n","import {Link, useLocation} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nimport { useDeleteContactMutation } from \"redux/phonebookApiQuery\";\nimport { IconButton } from 'components/ui';\nimport {FaUserMinus} from \"react-icons/fa\";\nimport {GrDocumentUpdate} from \"react-icons/gr\";\n\n\nexport const Contact = ({ id, name, number }) => {\n  const location = useLocation();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  \n  const getInitials = () => name.slice(0,1).toUpperCase();\n\n  return (\n    <ListItem key={id} id={id}>\n      <GapBox>\n        <Initials>{getInitials()}</Initials>\n          {name}: {number}\n       </GapBox>\n       <GapBox>\n         <StyledLink to={`/update/${id}`} state={{ from: location }}>\n            <IconButton\n              type=\"button\"\n              aria-label=\"link to update contact page\">\n              <GrDocumentUpdate/>\n            </IconButton>\n        </StyledLink>\n        <IconButton \n          onClick={() => deleteContact(id)}\n          disabled={isDeleting}>\n          <FaUserMinus/>\n        </IconButton>\n      </GapBox>\n    </ListItem> \n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nconst ListItem = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nmargin-bottom: ${p => p.theme.space[1]}px;\nbox-shadow: 0px 5px 5px -5px ${p => p.theme.colors.tertiary};\nbackground-color: ${p => p.theme.colors.white};\n`;\nconst Initials = styled.span`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nwidth: 30px;\nheight: 30px;\nborder-radius: ${p => p.theme.radii.round};\ncolor: ${p => p.theme.colors.white};\nbackground-color: ${p => p.theme.colors.primary};\nbox-shadow: \n    -10px -10px 15px rgba(255, 255, 255, 0.6),\n    10px 10px 15px rgba(70, 70, 70, 0.18);\n`;\nconst GapBox = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\ngap: ${p => p.theme.space[1]}px;\n`;\nconst StyledLink = styled(Link)`\ndisplay:block;\nmargin-left: auto;\n`;\n","import { useSelector } from \"react-redux\";\nimport { useMemo } from \"react\";\nimport { createSelector } from \"@reduxjs/toolkit\";\nimport styled from \"styled-components\";\nimport { useGetContactsQuery } from \"redux/phonebookApiQuery\";\nimport { getFilter } from \"redux/contacts\";\nimport { SpinnerDotted } from 'spinners-react';\nimport { Contact } from \"./Contact\";\nimport { List } from \"components/ui\";\n\n\nexport const ContactsList = () => {\n  const contact = useSelector(getFilter);\n\n  const checkedContacts = useMemo(() => {\n    return createSelector(\n      [res => res.data, (_, contact) => contact],\n      (contacts, contact) => \n        contacts?.filter(({name}) => {\n          return name.toLowerCase().includes(contact.toLowerCase());\n          }).sort((a, b) => a.name.localeCompare(b.name)) ?? [],\n    );\n  },[]);\n\n  const { filteredContacts, isFetching} = useGetContactsQuery(undefined, {\n    selectFromResult(result) {\n      return {\n        ...result,\n        filteredContacts: checkedContacts(result, contact)\n      };\n    },\n  });\n\n  return (\n    <>\n      {isFetching && <StyledSpinner speed={20} size={100} color={'#0e6769'}/>}\n      <List>\n        {filteredContacts.map(contact => (\n          <Contact key={contact.id} {...contact}/>)\n        )}\n      </List>\n    </>\n  );\n};\n\nconst StyledSpinner = styled(SpinnerDotted)`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\n`;\n\n\n","import {FaSearch} from \"react-icons/fa\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contactsSlice';\nimport { Label, Input, Box } from \"components/ui\";\nimport { getFilter } from \"redux/contacts\";\n\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  \n  return (\n    <Box>\n      <Label htmlFor=\"filter\"><FaSearch/>Find contacts by name</Label>\n        <Input type='text' name='filter' \n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={filter}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />      \n    </Box>\n  );\n};\n\n","import styled from 'styled-components';\nimport { Section } from 'components/ui';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactsList } from 'components/ContactsList';\nimport { Filter } from 'components/Filter';\nimport { breakpoints } from \"styleConfig/breakpoints\";\nimport BackPic from 'assets/contactBack.jpg'\n\n\nconst ContactsPage  = () => {\n  return (\n    <ContactsWrapper>\n      <Section>\n        <ContactForm />\n      </Section>\n      <Section>\n        <Filter />\n        <ContactsList />\n      </Section>\n    </ContactsWrapper>\n  );\n};\n\nconst ContactsWrapper = styled.div`\nwidth: 100%;\nheight: 100%;\noverflow: auto;\ncolor: ${p => p.theme.colors.primary}; \npadding: 0 ${p => p.theme.space[2]}px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n  @media (${breakpoints.tablet}) {\n    padding: 0 ${p => p.theme.space[3]}px;\n  };\n  @media (${breakpoints.laptop}) {\n    padding: 0 ${p => p.theme.space[4]}px;\n    align-items: flex-start;\n    flex-direction: row;\n    justify-content: space-around;\n  };\nmargin: 0 auto;\nbackground-color: white;\nbackground-image: url(${BackPic});\nbackground-position: center;\nbackground-repeat: no-repeat;\nbackground-size: contain;\n`;\n\nexport default ContactsPage;","import * as yup from 'yup';\n\nexport const yupPhoneValidation = ({\n  number: yup.string().required().test({\n      test: (value) => (/^[\\d+][\\d()-]{8,16}\\d$/i).test(value),\n  }),\n});\n\n","import * as yup from 'yup';\n\nexport const yupPasswordValidation = ({\n  password: yup\n    .string()\n    .required('Please, enter your password')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,24}$/,\n      \"Must contain 8 or more characters: uppercase, lowercase letters, a number and a special case character\"\n  ),\n});\n\n","import * as yup from 'yup';\n\nexport const yupEmailValidation = ({\n    email: yup.string().email('Invalid email address format').required('Please, enter your email')\n});"],"names":["PhoneInputField","props","field","name","value","setFieldValue","form","country","onChange","placeholder","phoneNumber","id","defaultProps","className","label","disabled","ContactForm","useCreateContactMutation","createContact","contacts","useGetContactsQuery","data","schema","yup","yupPhoneValidation","required","initialValues","number","validationSchema","onSubmit","values","resetForm","find","toLowerCase","toast","htmlFor","type","regions","component","UpdateForm","navigate","useNavigate","location","useLocation","useParams","useState","state","from","url","setUrl","useUpdateContactMutation","updateContact","isLoading","Contact","useDeleteContactMutation","deleteContact","isDeleting","ListItem","GapBox","Initials","slice","toUpperCase","StyledLink","to","onClick","styled","p","theme","space","colors","tertiary","white","radii","round","primary","Link","ContactsList","contact","useSelector","getFilter","checkedContacts","useMemo","createSelector","res","_","filter","includes","sort","a","b","localeCompare","undefined","selectFromResult","result","filteredContacts","isFetching","StyledSpinner","speed","size","color","map","SpinnerDotted","Filter","dispatch","useDispatch","pattern","e","changeFilter","target","ContactsWrapper","breakpoints","BackPic","test","yupPasswordValidation","password","matches","yupEmailValidation","email"],"sourceRoot":""}