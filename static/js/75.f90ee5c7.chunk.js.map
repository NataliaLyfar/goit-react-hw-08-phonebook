{"version":3,"file":"static/js/75.f90ee5c7.chunk.js","mappings":"4RAiBaA,EAAY,WACvB,OAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAOXC,EAASC,EAAAA,IAAA,kBACVC,EAAAA,IADU,IAEbC,MAAOF,EAAAA,KAAaE,QAAQC,SAAS,+BAYvC,OACE,SAAC,KAAD,CACEC,cArBkB,CACpBF,MAAO,GACPG,SAAU,IAoBRC,iBAAkBP,EAClBQ,SAbiB,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAC7BZ,EAASa,EAAAA,EAAAA,MAAqBF,IAC9BC,GACD,EAOC,UAII,UAAC,KAAD,YACI,UAAC,KAAD,CAAOE,QAAQ,QAAf,WAAuB,SAAC,MAAD,IAAvB,YACA,SAAC,KAAD,CAAWC,KAAK,QAAQC,KAAK,WAC7B,SAAC,KAAD,CAAWA,KAAK,WAChB,SAAC,KAAD,CAAOF,QAAQ,WAAf,uBACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAWC,KAAMjB,EAAgB,OAAS,WAAYkB,KAAK,cAC3D,SAACC,EAAA,EAAD,CACAC,UAAU,MACVC,SAAS,SAACC,EAAA,EAAD,CAASC,GAAG,0BAAZ,2BAFT,UAGE,SAAC,KAAD,CACEC,QApBO,WACrBvB,GAAkBD,EACnB,EAmBeiB,KAAK,SAFP,UAGE,SAAC,MAAD,CAAUQ,KAAM,aAItB,SAAC,KAAD,CAAWP,KAAK,cAChB,SAAC,KAAD,CAAeD,KAAK,SAApB,wBAMX,ECtDD,EAXkB,WAChB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,4CACA,SAACnB,EAAD,QAIP,C,sHCXY4B,EAAsB,CACjCC,OAAQtB,EAAAA,KAAaG,WAAWoB,KAAK,CACjCA,KAAM,SAACC,GAAD,MAAY,0BAA2BD,KAAKC,EAA5C,KCFCC,EAAyB,CACpCpB,SAAUL,EAAAA,KAEPG,SAAS,+BACTuB,QACC,mEACA,4GAIOzB,EAA8B,CACzCI,SAAUL,EAAAA,KAEPG,SAAS,+BACTuB,QACC,mEAJM,wK","sources":["components/AuthForms/LogInForm.jsx","pages/LoginPage/index.jsx","schema/yupPhoneValidation.js","schema/yupPasswordValidation.js"],"sourcesContent":["import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { yupLoginPasswordValidation } from 'schema';\nimport { useDispatch } from 'react-redux';\nimport  authOperations from 'redux/auth/authOperations';\nimport { FaUserPlus, FaRegEye } from \"react-icons/fa\";\nimport { Label, \n         PrimaryButton,\n         ShowPasswordButton,\n         FormError, \n         FormContact, \n         FormInput, \n         InputWrapper } from \"components/ui\";\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\n\nexport const LogInForm = () => {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n      \n  const schema = yup.object({\n    ...yupLoginPasswordValidation,\n    email: yup.string().email().required('Please, enter your email'),\n  });\n    \n  const handleSubmit = (values, {resetForm}) => {\n    dispatch(authOperations.logIn(values));\n    resetForm();\n  };\n\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}>  \n        <FormContact>\n            <Label htmlFor='email'><FaUserPlus/>Email</Label>\n            <FormInput type='email' name='email'/>\n            <FormError name=\"email\"/>\n            <Label htmlFor='password'>Password</Label>\n            <InputWrapper>\n              <FormInput type={passwordShown ? 'text' : 'password'} name=\"password\"/>\n              <OverlayTrigger\n              placement=\"top\"\n              overlay={<Tooltip id=\"password button tooltip\">show password</Tooltip>}>\n                <ShowPasswordButton\n                  onClick={togglePassword}\n                  type=\"button\">\n                  <FaRegEye size={30} />\n                </ShowPasswordButton>\n              </OverlayTrigger>\n            </InputWrapper>\n            <FormError name=\"password\"/>\n            <PrimaryButton type='submit'>\n              Log In\n            </PrimaryButton>\n        </FormContact>\n    </Formik>\n  );\n};","import { LogInForm } from \"components/AuthForms/LogInForm\";\nimport { FormPageContainer, FormWrapper, Title } from \"components/ui\";\n\n\nconst LoginPage = () => {\n  return (\n    <FormPageContainer>\n      <FormWrapper>\n        <Title>Please login to your account</Title>\n        <LogInForm />\n      </FormWrapper>\n    </FormPageContainer>\n  );\n};\n\nexport default LoginPage;","import * as yup from 'yup';\n\nexport const yupPhoneValidation = ({\n  number: yup.string().required().test({\n      test: (value) => (/^[\\d+][\\d()-]{8,16}\\d$/i).test(value),\n  }),\n});\n\n","import * as yup from 'yup';\n\nexport const yupPasswordValidation = ({\n  password: yup\n    .string()\n    .required('Please, enter your password')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,24}$/,\n      \"Must contain 8 and more characters: uppercase, lowercase letters, a number and a special case character\"\n  ),\n});\n\nexport const yupLoginPasswordValidation = ({\n  password: yup\n    .string()\n    .required('Please, enter your password')\n    .matches(\n      /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,24}$/,\n      `The password must match the registration's password.\n       Must contain 8 and more characters: uppercase, lowercase letters, a number and a special case character`\n  ),\n});\n"],"names":["LogInForm","useState","passwordShown","setPasswordShown","dispatch","useDispatch","schema","yup","yupLoginPasswordValidation","email","required","initialValues","password","validationSchema","onSubmit","values","resetForm","authOperations","htmlFor","type","name","OverlayTrigger","placement","overlay","Tooltip","id","onClick","size","yupPhoneValidation","number","test","value","yupPasswordValidation","matches"],"sourceRoot":""}